import {
  require_cjs,
  require_lib,
  require_lodash
} from "./chunk-QP3W6FY4.js";
import {
  require_react
} from "./chunk-WQMOH32Y.js";
import {
  axios_default
} from "./chunk-RV7DNESO.js";
import {
  __commonJS,
  __toESM
} from "./chunk-5WWUZCGV.js";

// node_modules/nprogress/nprogress.js
var require_nprogress = __commonJS({
  "node_modules/nprogress/nprogress.js"(exports, module) {
    (function(root, factory) {
      if (typeof define === "function" && define.amd) {
        define(factory);
      } else if (typeof exports === "object") {
        module.exports = factory();
      } else {
        root.NProgress = factory();
      }
    })(exports, function() {
      var NProgress = {};
      NProgress.version = "0.2.0";
      var Settings = NProgress.settings = {
        minimum: 0.08,
        easing: "ease",
        positionUsing: "",
        speed: 200,
        trickle: true,
        trickleRate: 0.02,
        trickleSpeed: 800,
        showSpinner: true,
        barSelector: '[role="bar"]',
        spinnerSelector: '[role="spinner"]',
        parent: "body",
        template: '<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'
      };
      NProgress.configure = function(options) {
        var key, value;
        for (key in options) {
          value = options[key];
          if (value !== void 0 && options.hasOwnProperty(key))
            Settings[key] = value;
        }
        return this;
      };
      NProgress.status = null;
      NProgress.set = function(n) {
        var started = NProgress.isStarted();
        n = clamp(n, Settings.minimum, 1);
        NProgress.status = n === 1 ? null : n;
        var progress = NProgress.render(!started), bar = progress.querySelector(Settings.barSelector), speed = Settings.speed, ease = Settings.easing;
        progress.offsetWidth;
        queue(function(next) {
          if (Settings.positionUsing === "")
            Settings.positionUsing = NProgress.getPositioningCSS();
          css(bar, barPositionCSS(n, speed, ease));
          if (n === 1) {
            css(progress, {
              transition: "none",
              opacity: 1
            });
            progress.offsetWidth;
            setTimeout(function() {
              css(progress, {
                transition: "all " + speed + "ms linear",
                opacity: 0
              });
              setTimeout(function() {
                NProgress.remove();
                next();
              }, speed);
            }, speed);
          } else {
            setTimeout(next, speed);
          }
        });
        return this;
      };
      NProgress.isStarted = function() {
        return typeof NProgress.status === "number";
      };
      NProgress.start = function() {
        if (!NProgress.status)
          NProgress.set(0);
        var work = function() {
          setTimeout(function() {
            if (!NProgress.status)
              return;
            NProgress.trickle();
            work();
          }, Settings.trickleSpeed);
        };
        if (Settings.trickle)
          work();
        return this;
      };
      NProgress.done = function(force) {
        if (!force && !NProgress.status)
          return this;
        return NProgress.inc(0.3 + 0.5 * Math.random()).set(1);
      };
      NProgress.inc = function(amount) {
        var n = NProgress.status;
        if (!n) {
          return NProgress.start();
        } else {
          if (typeof amount !== "number") {
            amount = (1 - n) * clamp(Math.random() * n, 0.1, 0.95);
          }
          n = clamp(n + amount, 0, 0.994);
          return NProgress.set(n);
        }
      };
      NProgress.trickle = function() {
        return NProgress.inc(Math.random() * Settings.trickleRate);
      };
      (function() {
        var initial = 0, current = 0;
        NProgress.promise = function($promise) {
          if (!$promise || $promise.state() === "resolved") {
            return this;
          }
          if (current === 0) {
            NProgress.start();
          }
          initial++;
          current++;
          $promise.always(function() {
            current--;
            if (current === 0) {
              initial = 0;
              NProgress.done();
            } else {
              NProgress.set((initial - current) / initial);
            }
          });
          return this;
        };
      })();
      NProgress.render = function(fromStart) {
        if (NProgress.isRendered())
          return document.getElementById("nprogress");
        addClass(document.documentElement, "nprogress-busy");
        var progress = document.createElement("div");
        progress.id = "nprogress";
        progress.innerHTML = Settings.template;
        var bar = progress.querySelector(Settings.barSelector), perc = fromStart ? "-100" : toBarPerc(NProgress.status || 0), parent = document.querySelector(Settings.parent), spinner;
        css(bar, {
          transition: "all 0 linear",
          transform: "translate3d(" + perc + "%,0,0)"
        });
        if (!Settings.showSpinner) {
          spinner = progress.querySelector(Settings.spinnerSelector);
          spinner && removeElement(spinner);
        }
        if (parent != document.body) {
          addClass(parent, "nprogress-custom-parent");
        }
        parent.appendChild(progress);
        return progress;
      };
      NProgress.remove = function() {
        removeClass(document.documentElement, "nprogress-busy");
        removeClass(document.querySelector(Settings.parent), "nprogress-custom-parent");
        var progress = document.getElementById("nprogress");
        progress && removeElement(progress);
      };
      NProgress.isRendered = function() {
        return !!document.getElementById("nprogress");
      };
      NProgress.getPositioningCSS = function() {
        var bodyStyle = document.body.style;
        var vendorPrefix = "WebkitTransform" in bodyStyle ? "Webkit" : "MozTransform" in bodyStyle ? "Moz" : "msTransform" in bodyStyle ? "ms" : "OTransform" in bodyStyle ? "O" : "";
        if (vendorPrefix + "Perspective" in bodyStyle) {
          return "translate3d";
        } else if (vendorPrefix + "Transform" in bodyStyle) {
          return "translate";
        } else {
          return "margin";
        }
      };
      function clamp(n, min, max) {
        if (n < min)
          return min;
        if (n > max)
          return max;
        return n;
      }
      function toBarPerc(n) {
        return (-1 + n) * 100;
      }
      function barPositionCSS(n, speed, ease) {
        var barCSS;
        if (Settings.positionUsing === "translate3d") {
          barCSS = { transform: "translate3d(" + toBarPerc(n) + "%,0,0)" };
        } else if (Settings.positionUsing === "translate") {
          barCSS = { transform: "translate(" + toBarPerc(n) + "%,0)" };
        } else {
          barCSS = { "margin-left": toBarPerc(n) + "%" };
        }
        barCSS.transition = "all " + speed + "ms " + ease;
        return barCSS;
      }
      var queue = function() {
        var pending = [];
        function next() {
          var fn = pending.shift();
          if (fn) {
            fn(next);
          }
        }
        return function(fn) {
          pending.push(fn);
          if (pending.length == 1)
            next();
        };
      }();
      var css = function() {
        var cssPrefixes = ["Webkit", "O", "Moz", "ms"], cssProps = {};
        function camelCase(string) {
          return string.replace(/^-ms-/, "ms-").replace(/-([\da-z])/gi, function(match, letter) {
            return letter.toUpperCase();
          });
        }
        function getVendorProp(name) {
          var style = document.body.style;
          if (name in style)
            return name;
          var i = cssPrefixes.length, capName = name.charAt(0).toUpperCase() + name.slice(1), vendorName;
          while (i--) {
            vendorName = cssPrefixes[i] + capName;
            if (vendorName in style)
              return vendorName;
          }
          return name;
        }
        function getStyleProp(name) {
          name = camelCase(name);
          return cssProps[name] || (cssProps[name] = getVendorProp(name));
        }
        function applyCss(element, prop, value) {
          prop = getStyleProp(prop);
          element.style[prop] = value;
        }
        return function(element, properties) {
          var args = arguments, prop, value;
          if (args.length == 2) {
            for (prop in properties) {
              value = properties[prop];
              if (value !== void 0 && properties.hasOwnProperty(prop))
                applyCss(element, prop, value);
            }
          } else {
            applyCss(element, args[1], args[2]);
          }
        };
      }();
      function hasClass(element, name) {
        var list = typeof element == "string" ? element : classList(element);
        return list.indexOf(" " + name + " ") >= 0;
      }
      function addClass(element, name) {
        var oldList = classList(element), newList = oldList + name;
        if (hasClass(oldList, name))
          return;
        element.className = newList.substring(1);
      }
      function removeClass(element, name) {
        var oldList = classList(element), newList;
        if (!hasClass(element, name))
          return;
        newList = oldList.replace(" " + name + " ", " ");
        element.className = newList.substring(1, newList.length - 1);
      }
      function classList(element) {
        return (" " + (element.className || "") + " ").replace(/\s+/gi, " ");
      }
      function removeElement(element) {
        element && element.parentNode && element.parentNode.removeChild(element);
      }
      return NProgress;
    });
  }
});

// node_modules/@inertiajs/core/dist/index.esm.js
var import_deepmerge = __toESM(require_cjs());
var O = __toESM(require_lib());
var import_nprogress = __toESM(require_nprogress());
function T(t, e) {
  let i;
  return function(...r) {
    clearTimeout(i), i = setTimeout(() => t.apply(this, r), e);
  };
}
function f(t, e) {
  return document.dispatchEvent(new CustomEvent(`inertia:${t}`, e));
}
var H = (t) => f("before", { cancelable: true, detail: { visit: t } });
var q = (t) => f("error", { detail: { errors: t } });
var $ = (t) => f("exception", { cancelable: true, detail: { exception: t } });
var N = (t) => f("finish", { detail: { visit: t } });
var W = (t) => f("invalid", { cancelable: true, detail: { response: t } });
var P = (t) => f("navigate", { detail: { page: t } });
var K = (t) => f("progress", { detail: { progress: t } });
var X = (t) => f("start", { detail: { visit: t } });
var B = (t) => f("success", { detail: { page: t } });
function I(t) {
  return t instanceof File || t instanceof Blob || t instanceof FileList && t.length > 0 || t instanceof FormData && Array.from(t.values()).some((e) => I(e)) || typeof t == "object" && t !== null && Object.values(t).some((e) => I(e));
}
function k(t, e = new FormData(), i = null) {
  t = t || {};
  for (let r in t)
    Object.prototype.hasOwnProperty.call(t, r) && z(e, J(i, r), t[r]);
  return e;
}
function J(t, e) {
  return t ? t + "[" + e + "]" : e;
}
function z(t, e, i) {
  if (Array.isArray(i))
    return Array.from(i.keys()).forEach((r) => z(t, J(e, r.toString()), i[r]));
  if (i instanceof Date)
    return t.append(e, i.toISOString());
  if (i instanceof File)
    return t.append(e, i, i.name);
  if (i instanceof Blob)
    return t.append(e, i);
  if (typeof i == "boolean")
    return t.append(e, i ? "1" : "0");
  if (typeof i == "string")
    return t.append(e, i);
  if (typeof i == "number")
    return t.append(e, `${i}`);
  if (i == null)
    return t.append(e, "");
  k(i, t, e);
}
var _ = { modal: null, listener: null, show(t) {
  typeof t == "object" && (t = `All Inertia requests must receive a valid Inertia response, however a plain JSON response was received.<hr>${JSON.stringify(t)}`);
  let e = document.createElement("html");
  e.innerHTML = t, e.querySelectorAll("a").forEach((r) => r.setAttribute("target", "_top")), this.modal = document.createElement("div"), this.modal.style.position = "fixed", this.modal.style.width = "100vw", this.modal.style.height = "100vh", this.modal.style.padding = "50px", this.modal.style.boxSizing = "border-box", this.modal.style.backgroundColor = "rgba(0, 0, 0, .6)", this.modal.style.zIndex = 2e5, this.modal.addEventListener("click", () => this.hide());
  let i = document.createElement("iframe");
  if (i.style.backgroundColor = "white", i.style.borderRadius = "5px", i.style.width = "100%", i.style.height = "100%", this.modal.appendChild(i), document.body.prepend(this.modal), document.body.style.overflow = "hidden", !i.contentWindow)
    throw new Error("iframe not yet ready.");
  i.contentWindow.document.open(), i.contentWindow.document.write(e.outerHTML), i.contentWindow.document.close(), this.listener = this.hideOnEscape.bind(this), document.addEventListener("keydown", this.listener);
}, hide() {
  this.modal.outerHTML = "", this.modal = null, document.body.style.overflow = "visible", document.removeEventListener("keydown", this.listener);
}, hideOnEscape(t) {
  t.keyCode === 27 && this.hide();
} };
function b(t) {
  return new URL(t.toString(), window.location.toString());
}
function D(t, e, i, r = "brackets") {
  let s = /^https?:\/\//.test(e.toString()), l = s || e.toString().startsWith("/"), h = !l && !e.toString().startsWith("#") && !e.toString().startsWith("?"), g = e.toString().includes("?") || t === "get" && Object.keys(i).length, m = e.toString().includes("#"), c = new URL(e.toString(), "http://localhost");
  return t === "get" && Object.keys(i).length && (c.search = O.stringify((0, import_deepmerge.default)(O.parse(c.search, { ignoreQueryPrefix: true }), i), { encodeValuesOnly: true, arrayFormat: r }), i = {}), [[s ? `${c.protocol}//${c.host}` : "", l ? c.pathname : "", h ? c.pathname.substring(1) : "", g ? c.search : "", m ? c.hash : ""].join(""), i];
}
function E(t) {
  return t = new URL(t.href), t.hash = "", t;
}
var C = typeof window > "u";
var Y = !C && /CriOS/.test(window.navigator.userAgent);
var Z = (t) => {
  requestAnimationFrame(() => {
    requestAnimationFrame(t);
  });
};
var F = class {
  constructor() {
    this.visitId = null;
  }
  init({ initialPage: e, resolveComponent: i, swapComponent: r }) {
    this.page = e, this.resolveComponent = i, this.swapComponent = r, this.setNavigationType(), this.clearRememberedStateOnReload(), this.isBackForwardVisit() ? this.handleBackForwardVisit(this.page) : this.isLocationVisit() ? this.handleLocationVisit(this.page) : this.handleInitialPageVisit(this.page), this.setupEventListeners();
  }
  setNavigationType() {
    this.navigationType = window.performance && window.performance.getEntriesByType && window.performance.getEntriesByType("navigation").length > 0 ? window.performance.getEntriesByType("navigation")[0].type : "navigate";
  }
  clearRememberedStateOnReload() {
    var _a;
    this.navigationType === "reload" && ((_a = window.history.state) == null ? void 0 : _a.rememberedState) && delete window.history.state.rememberedState;
  }
  handleInitialPageVisit(e) {
    let i = window.location.hash;
    this.page.url.includes(i) || (this.page.url += i), this.setPage(e, { preserveScroll: true, preserveState: true }).then(() => P(e));
  }
  setupEventListeners() {
    window.addEventListener("popstate", this.handlePopstateEvent.bind(this)), document.addEventListener("scroll", T(this.handleScrollEvent.bind(this), 100), true);
  }
  scrollRegions() {
    return document.querySelectorAll("[scroll-region]");
  }
  handleScrollEvent(e) {
    typeof e.target.hasAttribute == "function" && e.target.hasAttribute("scroll-region") && this.saveScrollPositions();
  }
  saveScrollPositions() {
    this.replaceState({ ...this.page, scrollRegions: Array.from(this.scrollRegions()).map((e) => ({ top: e.scrollTop, left: e.scrollLeft })) });
  }
  resetScrollPositions() {
    Z(() => {
      var _a;
      window.scrollTo(0, 0), this.scrollRegions().forEach((e) => {
        typeof e.scrollTo == "function" ? e.scrollTo(0, 0) : (e.scrollTop = 0, e.scrollLeft = 0);
      }), this.saveScrollPositions(), window.location.hash && ((_a = document.getElementById(window.location.hash.slice(1))) == null ? void 0 : _a.scrollIntoView());
    });
  }
  restoreScrollPositions() {
    Z(() => {
      this.page.scrollRegions && this.scrollRegions().forEach((e, i) => {
        let r = this.page.scrollRegions[i];
        if (r)
          typeof e.scrollTo == "function" ? e.scrollTo(r.left, r.top) : (e.scrollTop = r.top, e.scrollLeft = r.left);
        else
          return;
      });
    });
  }
  isBackForwardVisit() {
    return window.history.state && this.navigationType === "back_forward";
  }
  handleBackForwardVisit(e) {
    window.history.state.version = e.version, this.setPage(window.history.state, { preserveScroll: true, preserveState: true }).then(() => {
      this.restoreScrollPositions(), P(e);
    });
  }
  locationVisit(e, i) {
    try {
      let r = { preserveScroll: i };
      window.sessionStorage.setItem("inertiaLocationVisit", JSON.stringify(r)), window.location.href = e.href, E(window.location).href === E(e).href && window.location.reload();
    } catch {
      return false;
    }
  }
  isLocationVisit() {
    try {
      return window.sessionStorage.getItem("inertiaLocationVisit") !== null;
    } catch {
      return false;
    }
  }
  handleLocationVisit(e) {
    var _a, _b;
    let i = JSON.parse(window.sessionStorage.getItem("inertiaLocationVisit") || "");
    window.sessionStorage.removeItem("inertiaLocationVisit"), e.url += window.location.hash, e.rememberedState = ((_a = window.history.state) == null ? void 0 : _a.rememberedState) ?? {}, e.scrollRegions = ((_b = window.history.state) == null ? void 0 : _b.scrollRegions) ?? [], this.setPage(e, { preserveScroll: i.preserveScroll, preserveState: true }).then(() => {
      i.preserveScroll && this.restoreScrollPositions(), P(e);
    });
  }
  isLocationVisitResponse(e) {
    return !!(e && e.status === 409 && e.headers["x-inertia-location"]);
  }
  isInertiaResponse(e) {
    return !!(e == null ? void 0 : e.headers["x-inertia"]);
  }
  createVisitId() {
    return this.visitId = {}, this.visitId;
  }
  cancelVisit(e, { cancelled: i = false, interrupted: r = false }) {
    e && !e.completed && !e.cancelled && !e.interrupted && (e.cancelToken.abort(), e.onCancel(), e.completed = false, e.cancelled = i, e.interrupted = r, N(e), e.onFinish(e));
  }
  finishVisit(e) {
    !e.cancelled && !e.interrupted && (e.completed = true, e.cancelled = false, e.interrupted = false, N(e), e.onFinish(e));
  }
  resolvePreserveOption(e, i) {
    return typeof e == "function" ? e(i) : e === "errors" ? Object.keys(i.props.errors || {}).length > 0 : e;
  }
  cancel() {
    this.activeVisit && this.cancelVisit(this.activeVisit, { cancelled: true });
  }
  visit(e, { method: i = "get", data: r = {}, replace: s = false, preserveScroll: l = false, preserveState: h = false, only: g = [], except: m = [], headers: c = {}, errorBag: o = "", forceFormData: v = false, onCancelToken: L = () => {
  }, onBefore: d = () => {
  }, onStart: p = () => {
  }, onProgress: x2 = () => {
  }, onFinish: y = () => {
  }, onCancel: ne = () => {
  }, onSuccess: U = () => {
  }, onError: G2 = () => {
  }, queryStringArrayFormat: A = "brackets" } = {}) {
    let S2 = typeof e == "string" ? b(e) : e;
    if ((I(r) || v) && !(r instanceof FormData) && (r = k(r)), !(r instanceof FormData)) {
      let [n, a] = D(i, S2, r, A);
      S2 = b(n), r = a;
    }
    let R = { url: S2, method: i, data: r, replace: s, preserveScroll: l, preserveState: h, only: g, except: m, headers: c, errorBag: o, forceFormData: v, queryStringArrayFormat: A, cancelled: false, completed: false, interrupted: false };
    if (d(R) === false || !H(R))
      return;
    this.activeVisit && this.cancelVisit(this.activeVisit, { interrupted: true }), this.saveScrollPositions();
    let M2 = this.createVisitId();
    this.activeVisit = { ...R, onCancelToken: L, onBefore: d, onStart: p, onProgress: x2, onFinish: y, onCancel: ne, onSuccess: U, onError: G2, queryStringArrayFormat: A, cancelToken: new AbortController() }, L({ cancel: () => {
      this.activeVisit && this.cancelVisit(this.activeVisit, { cancelled: true });
    } }), X(R), p(R);
    let j = !!(g.length || m.length);
    axios_default({ method: i, url: E(S2).href, data: i === "get" ? {} : r, params: i === "get" ? r : {}, signal: this.activeVisit.cancelToken.signal, headers: { ...c, Accept: "text/html, application/xhtml+xml", "X-Requested-With": "XMLHttpRequest", "X-Inertia": true, ...j ? { "X-Inertia-Partial-Component": this.page.component } : {}, ...g.length ? { "X-Inertia-Partial-Data": g.join(",") } : {}, ...m.length ? { "X-Inertia-Partial-Except": m.join(",") } : {}, ...o && o.length ? { "X-Inertia-Error-Bag": o } : {}, ...this.page.version ? { "X-Inertia-Version": this.page.version } : {} }, onUploadProgress: (n) => {
      r instanceof FormData && (n.percentage = n.progress ? Math.round(n.progress * 100) : 0, K(n), x2(n));
    } }).then((n) => {
      var _a;
      if (!this.isInertiaResponse(n))
        return Promise.reject({ response: n });
      let a = n.data;
      j && a.component === this.page.component && (a.props = { ...this.page.props, ...a.props }), l = this.resolvePreserveOption(l, a), h = this.resolvePreserveOption(h, a), h && ((_a = window.history.state) == null ? void 0 : _a.rememberedState) && a.component === this.page.component && (a.rememberedState = window.history.state.rememberedState);
      let w2 = S2, V2 = b(a.url);
      return w2.hash && !V2.hash && E(w2).href === V2.href && (V2.hash = w2.hash, a.url = V2.href), this.setPage(a, { visitId: M2, replace: s, preserveScroll: l, preserveState: h });
    }).then(() => {
      let n = this.page.props.errors || {};
      if (Object.keys(n).length > 0) {
        let a = o ? n[o] ? n[o] : {} : n;
        return q(a), G2(a);
      }
      return B(this.page), U(this.page);
    }).catch((n) => {
      if (this.isInertiaResponse(n.response))
        return this.setPage(n.response.data, { visitId: M2 });
      if (this.isLocationVisitResponse(n.response)) {
        let a = b(n.response.headers["x-inertia-location"]), w2 = S2;
        w2.hash && !a.hash && E(w2).href === a.href && (a.hash = w2.hash), this.locationVisit(a, l === true);
      } else if (n.response)
        W(n.response) && _.show(n.response.data);
      else
        return Promise.reject(n);
    }).then(() => {
      this.activeVisit && this.finishVisit(this.activeVisit);
    }).catch((n) => {
      if (!axios_default.isCancel(n)) {
        let a = $(n);
        if (this.activeVisit && this.finishVisit(this.activeVisit), a)
          return Promise.reject(n);
      }
    });
  }
  setPage(e, { visitId: i = this.createVisitId(), replace: r = false, preserveScroll: s = false, preserveState: l = false } = {}) {
    return Promise.resolve(this.resolveComponent(e.component)).then((h) => {
      i === this.visitId && (e.scrollRegions = this.page.scrollRegions || [], e.rememberedState = e.rememberedState || {}, r = r || b(e.url).href === window.location.href, r ? this.replaceState(e) : this.pushState(e), this.swapComponent({ component: h, page: e, preserveState: l }).then(() => {
        s ? this.restoreScrollPositions() : this.resetScrollPositions(), r || P(e);
      }));
    });
  }
  pushState(e) {
    this.page = e, Y ? setTimeout(() => window.history.pushState(e, "", e.url)) : window.history.pushState(e, "", e.url);
  }
  replaceState(e) {
    this.page = e, Y ? setTimeout(() => window.history.replaceState(e, "", e.url)) : window.history.replaceState(e, "", e.url);
  }
  handlePopstateEvent(e) {
    if (e.state !== null) {
      let i = e.state, r = this.createVisitId();
      Promise.resolve(this.resolveComponent(i.component)).then((s) => {
        r === this.visitId && (this.page = i, this.swapComponent({ component: s, page: i, preserveState: false }).then(() => {
          this.restoreScrollPositions(), P(i);
        }));
      });
    } else {
      let i = b(this.page.url);
      i.hash = window.location.hash, this.replaceState({ ...this.page, url: i.href }), this.resetScrollPositions();
    }
  }
  get(e, i = {}, r = {}) {
    return this.visit(e, { ...r, method: "get", data: i });
  }
  reload(e = {}) {
    return this.visit(window.location.href, { ...e, preserveScroll: true, preserveState: true });
  }
  replace(e, i = {}) {
    return console.warn(`Inertia.replace() has been deprecated and will be removed in a future release. Please use Inertia.${i.method ?? "get"}() instead.`), this.visit(e, { preserveState: true, ...i, replace: true });
  }
  post(e, i = {}, r = {}) {
    return this.visit(e, { preserveState: true, ...r, method: "post", data: i });
  }
  put(e, i = {}, r = {}) {
    return this.visit(e, { preserveState: true, ...r, method: "put", data: i });
  }
  patch(e, i = {}, r = {}) {
    return this.visit(e, { preserveState: true, ...r, method: "patch", data: i });
  }
  delete(e, i = {}) {
    return this.visit(e, { preserveState: true, ...i, method: "delete" });
  }
  remember(e, i = "default") {
    var _a;
    C || this.replaceState({ ...this.page, rememberedState: { ...(_a = this.page) == null ? void 0 : _a.rememberedState, [i]: e } });
  }
  restore(e = "default") {
    var _a, _b;
    if (!C)
      return (_b = (_a = window.history.state) == null ? void 0 : _a.rememberedState) == null ? void 0 : _b[e];
  }
  on(e, i) {
    if (C)
      return () => {
      };
    let r = (s) => {
      let l = i(s);
      s.cancelable && !s.defaultPrevented && l === false && s.preventDefault();
    };
    return document.addEventListener(`inertia:${e}`, r), () => document.removeEventListener(`inertia:${e}`, r);
  }
};
var se = { buildDOMElement(t) {
  let e = document.createElement("template");
  e.innerHTML = t;
  let i = e.content.firstChild;
  if (!t.startsWith("<script "))
    return i;
  let r = document.createElement("script");
  return r.innerHTML = i.innerHTML, i.getAttributeNames().forEach((s) => {
    r.setAttribute(s, i.getAttribute(s) || "");
  }), r;
}, isInertiaManagedElement(t) {
  return t.nodeType === Node.ELEMENT_NODE && t.getAttribute("inertia") !== null;
}, findMatchingElementIndex(t, e) {
  let i = t.getAttribute("inertia");
  return i !== null ? e.findIndex((r) => r.getAttribute("inertia") === i) : -1;
}, update: T(function(t) {
  let e = t.map((r) => this.buildDOMElement(r));
  Array.from(document.head.childNodes).filter((r) => this.isInertiaManagedElement(r)).forEach((r) => {
    var _a, _b;
    let s = this.findMatchingElementIndex(r, e);
    if (s === -1) {
      (_a = r == null ? void 0 : r.parentNode) == null ? void 0 : _a.removeChild(r);
      return;
    }
    let l = e.splice(s, 1)[0];
    l && !r.isEqualNode(l) && ((_b = r == null ? void 0 : r.parentNode) == null ? void 0 : _b.replaceChild(l, r));
  }), e.forEach((r) => document.head.appendChild(r));
}, 1) };
function ee(t, e, i) {
  let r = {}, s = 0;
  function l() {
    let o = s += 1;
    return r[o] = [], o.toString();
  }
  function h(o) {
    o === null || Object.keys(r).indexOf(o) === -1 || (delete r[o], c());
  }
  function g(o, v = []) {
    o !== null && Object.keys(r).indexOf(o) > -1 && (r[o] = v), c();
  }
  function m() {
    let o = e(""), v = { ...o ? { title: `<title inertia="">${o}</title>` } : {} }, L = Object.values(r).reduce((d, p) => d.concat(p), []).reduce((d, p) => {
      if (p.indexOf("<") === -1)
        return d;
      if (p.indexOf("<title ") === 0) {
        let y = p.match(/(<title [^>]+>)(.*?)(<\/title>)/);
        return d.title = y ? `${y[1]}${e(y[2])}${y[3]}` : p, d;
      }
      let x2 = p.match(/ inertia="[^"]+"/);
      return x2 ? d[x2[0]] = p : d[Object.keys(d).length] = p, d;
    }, v);
    return Object.values(L);
  }
  function c() {
    t ? i(m()) : se.update(m());
  }
  return c(), { forceUpdate: c, createProvider: function() {
    let o = l();
    return { update: (v) => g(o, v), disconnect: () => h(o) };
  } };
}
var te = null;
function ae(t) {
  document.addEventListener("inertia:start", le.bind(null, t)), document.addEventListener("inertia:progress", ce), document.addEventListener("inertia:finish", de);
}
function le(t) {
  te = setTimeout(() => import_nprogress.default.start(), t);
}
function ce(t) {
  var _a;
  import_nprogress.default.isStarted() && ((_a = t.detail.progress) == null ? void 0 : _a.percentage) && import_nprogress.default.set(Math.max(import_nprogress.default.status, t.detail.progress.percentage / 100 * 0.9));
}
function de(t) {
  if (clearTimeout(te), import_nprogress.default.isStarted())
    t.detail.visit.completed ? import_nprogress.default.done() : t.detail.visit.interrupted ? import_nprogress.default.set(0) : t.detail.visit.cancelled && (import_nprogress.default.done(), import_nprogress.default.remove());
  else
    return;
}
function pe(t) {
  let e = document.createElement("style");
  e.type = "text/css", e.textContent = `
    #nprogress {
      pointer-events: none;
    }

    #nprogress .bar {
      background: ${t};

      position: fixed;
      z-index: 1031;
      top: 0;
      left: 0;

      width: 100%;
      height: 2px;
    }

    #nprogress .peg {
      display: block;
      position: absolute;
      right: 0px;
      width: 100px;
      height: 100%;
      box-shadow: 0 0 10px ${t}, 0 0 5px ${t};
      opacity: 1.0;

      -webkit-transform: rotate(3deg) translate(0px, -4px);
          -ms-transform: rotate(3deg) translate(0px, -4px);
              transform: rotate(3deg) translate(0px, -4px);
    }

    #nprogress .spinner {
      display: block;
      position: fixed;
      z-index: 1031;
      top: 15px;
      right: 15px;
    }

    #nprogress .spinner-icon {
      width: 18px;
      height: 18px;
      box-sizing: border-box;

      border: solid 2px transparent;
      border-top-color: ${t};
      border-left-color: ${t};
      border-radius: 50%;

      -webkit-animation: nprogress-spinner 400ms linear infinite;
              animation: nprogress-spinner 400ms linear infinite;
    }

    .nprogress-custom-parent {
      overflow: hidden;
      position: relative;
    }

    .nprogress-custom-parent #nprogress .spinner,
    .nprogress-custom-parent #nprogress .bar {
      position: absolute;
    }

    @-webkit-keyframes nprogress-spinner {
      0%   { -webkit-transform: rotate(0deg); }
      100% { -webkit-transform: rotate(360deg); }
    }
    @keyframes nprogress-spinner {
      0%   { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }
  `, document.head.appendChild(e);
}
function ie({ delay: t = 250, color: e = "#29d", includeCSS: i = true, showSpinner: r = false } = {}) {
  ae(t), import_nprogress.default.configure({ showSpinner: r }), i && pe(e);
}
function re(t) {
  let e = t.currentTarget.tagName.toLowerCase() === "a";
  return !(t.target && (t == null ? void 0 : t.target).isContentEditable || t.defaultPrevented || e && t.altKey || e && t.ctrlKey || e && t.metaKey || e && t.shiftKey || e && "button" in t && t.button !== 0);
}
var Ne = new F();

// node_modules/@inertiajs/react/dist/index.esm.js
var import_react = __toESM(require_react());
var import_react2 = __toESM(require_react());
var import_react3 = __toESM(require_react());
var import_react4 = __toESM(require_react());
var import_react5 = __toESM(require_react());
var import_react6 = __toESM(require_react());
var import_lodash = __toESM(require_lodash());
var import_react7 = __toESM(require_react());
var import_react8 = __toESM(require_react());
var import_react9 = __toESM(require_react());
var V = (0, import_react3.createContext)(void 0);
V.displayName = "InertiaHeadContext";
var M = V;
var K2 = (0, import_react4.createContext)(void 0);
K2.displayName = "InertiaPageContext";
var H2 = K2;
function N2({ children: l, initialPage: p, initialComponent: a, resolveComponent: i, titleCallback: n, onHeadUpdate: F2 }) {
  let [d, y] = (0, import_react2.useState)({ component: a || null, page: p, key: null }), u2 = (0, import_react2.useMemo)(() => ee(typeof window > "u", n || ((c) => c), F2 || (() => {
  })), []);
  if ((0, import_react2.useEffect)(() => {
    Ne.init({ initialPage: p, resolveComponent: i, swapComponent: async ({ component: c, page: e, preserveState: s }) => {
      y((r) => ({ component: c, page: e, key: s ? r.key : Date.now() }));
    } }), Ne.on("navigate", () => u2.forceUpdate());
  }, []), !d.component)
    return (0, import_react2.createElement)(M.Provider, { value: u2 }, (0, import_react2.createElement)(H2.Provider, { value: d.page }, null));
  let f2 = l || (({ Component: c, props: e, key: s }) => {
    let r = (0, import_react2.createElement)(c, { key: s, ...e });
    return typeof c.layout == "function" ? c.layout(r) : Array.isArray(c.layout) ? c.layout.concat(r).reverse().reduce((g, T2) => (0, import_react2.createElement)(T2, { children: g, ...e })) : r;
  });
  return (0, import_react2.createElement)(M.Provider, { value: u2 }, (0, import_react2.createElement)(H2.Provider, { value: d.page }, f2({ Component: d.component, key: d.key, props: d.page.props })));
}
N2.displayName = "Inertia";
async function W2({ id: l = "app", resolve: p, setup: a, title: i, progress: n = {}, page: F2, render: d }) {
  let y = typeof window > "u", u2 = y ? null : document.getElementById(l), f2 = F2 || JSON.parse(u2.dataset.page), c = (r) => Promise.resolve(p(r)).then((g) => g.default || g), e = [], s = await c(f2.component).then((r) => a({ el: u2, App: N2, props: { initialPage: f2, initialComponent: r, resolveComponent: c, titleCallback: i, onHeadUpdate: y ? (g) => e = g : null } }));
  if (!y && n && ie(n), y) {
    let r = await d((0, import_react.createElement)("div", { id: l, "data-page": JSON.stringify(f2) }, s));
    return { head: e, body: r };
  }
}
var Te = function({ children: l, title: p }) {
  let a = (0, import_react5.useContext)(M), i = (0, import_react5.useMemo)(() => a.createProvider(), [a]);
  (0, import_react5.useEffect)(() => () => {
    i.disconnect();
  }, [i]);
  function n(e) {
    return ["area", "base", "br", "col", "embed", "hr", "img", "input", "keygen", "link", "meta", "param", "source", "track", "wbr"].indexOf(e.type) > -1;
  }
  function F2(e) {
    let s = Object.keys(e.props).reduce((r, g) => {
      if (["head-key", "children", "dangerouslySetInnerHTML"].includes(g))
        return r;
      let T2 = e.props[g];
      return T2 === "" ? r + ` ${g}` : r + ` ${g}="${T2}"`;
    }, "");
    return `<${e.type}${s}>`;
  }
  function d(e) {
    return typeof e.props.children == "string" ? e.props.children : e.props.children.reduce((s, r) => s + y(r), "");
  }
  function y(e) {
    let s = F2(e);
    return e.props.children && (s += d(e)), e.props.dangerouslySetInnerHTML && (s += e.props.dangerouslySetInnerHTML.__html), n(e) || (s += `</${e.type}>`), s;
  }
  function u2(e) {
    return import_react5.default.cloneElement(e, { inertia: e.props["head-key"] !== void 0 ? e.props["head-key"] : "" });
  }
  function f2(e) {
    return y(u2(e));
  }
  function c(e) {
    let s = import_react5.default.Children.toArray(e).filter((r) => r).map((r) => f2(r));
    return p && !s.find((r) => r.startsWith("<title")) && s.push(`<title inertia>${p}</title>`), s;
  }
  return i.update(c(l)), null;
};
var Se = Te;
var C2 = () => {
};
var J2 = (0, import_react6.forwardRef)(({ children: l, as: p = "a", data: a = {}, href: i, method: n = "get", preserveScroll: F2 = false, preserveState: d = null, replace: y = false, only: u2 = [], except: f2 = [], headers: c = {}, queryStringArrayFormat: e = "brackets", onClick: s = C2, onCancelToken: r = C2, onBefore: g = C2, onStart: T2 = C2, onProgress: O2 = C2, onFinish: k2 = C2, onCancel: L = C2, onSuccess: R = C2, onError: B2 = C2, ...I2 }, A) => {
  let v = (0, import_react6.useCallback)((E2) => {
    s(E2), re(E2) && (E2.preventDefault(), Ne.visit(i, { data: a, method: n, preserveScroll: F2, preserveState: d ?? n !== "get", replace: y, only: u2, except: f2, headers: c, onCancelToken: r, onBefore: g, onStart: T2, onProgress: O2, onFinish: k2, onCancel: L, onSuccess: R, onError: B2 }));
  }, [a, i, n, F2, d, y, u2, f2, c, s, r, g, T2, O2, k2, L, R, B2]);
  p = p.toLowerCase(), n = n.toLowerCase();
  let [j, U] = D(n, i || "", a, e);
  return i = j, a = U, p === "a" && n !== "get" && console.warn(`Creating POST/PUT/PATCH/DELETE <a> links is discouraged as it causes "Open Link in New Tab/Window" accessibility issues.

Please specify a more appropriate element using the "as" attribute. For example:

<Link href="${i}" method="${n}" as="button">...</Link>`), (0, import_react6.createElement)(p, { ...I2, ...p === "a" ? { href: i } : {}, ref: A, onClick: v }, l);
});
J2.displayName = "InertiaLink";
var xe = J2;
function w(l, p) {
  let [a, i] = (0, import_react8.useState)(() => {
    let n = Ne.restore(p);
    return n !== void 0 ? n : l;
  });
  return (0, import_react8.useEffect)(() => {
    Ne.remember(a, p);
  }, [a, p]), [a, i];
}
function G(l, p) {
  let a = (0, import_react7.useRef)(null), i = typeof l == "string" ? l : null, [n, F2] = (0, import_react7.useState)((typeof l == "string" ? p : l) || {}), d = (0, import_react7.useRef)(null), y = (0, import_react7.useRef)(null), [u2, f2] = i ? w(n, `${i}:data`) : (0, import_react7.useState)(n), [c, e] = i ? w({}, `${i}:errors`) : (0, import_react7.useState)({}), [s, r] = (0, import_react7.useState)(false), [g, T2] = (0, import_react7.useState)(false), [O2, k2] = (0, import_react7.useState)(null), [L, R] = (0, import_react7.useState)(false), [B2, I2] = (0, import_react7.useState)(false), A = (0, import_react7.useRef)((o) => o);
  (0, import_react7.useEffect)(() => (a.current = true, () => {
    a.current = false;
  }), []);
  let v = (0, import_react7.useCallback)((o, P2, t = {}) => {
    let h = { ...t, onCancelToken: (m) => {
      if (d.current = m, t.onCancelToken)
        return t.onCancelToken(m);
    }, onBefore: (m) => {
      if (R(false), I2(false), clearTimeout(y.current), t.onBefore)
        return t.onBefore(m);
    }, onStart: (m) => {
      if (T2(true), t.onStart)
        return t.onStart(m);
    }, onProgress: (m) => {
      if (k2(m), t.onProgress)
        return t.onProgress(m);
    }, onSuccess: (m) => {
      if (a.current && (T2(false), k2(null), e({}), r(false), R(true), I2(true), y.current = setTimeout(() => {
        a.current && I2(false);
      }, 2e3)), t.onSuccess)
        return t.onSuccess(m);
    }, onError: (m) => {
      if (a.current && (T2(false), k2(null), e(m), r(true)), t.onError)
        return t.onError(m);
    }, onCancel: () => {
      if (a.current && (T2(false), k2(null)), t.onCancel)
        return t.onCancel();
    }, onFinish: () => {
      if (a.current && (T2(false), k2(null)), d.current = null, t.onFinish)
        return t.onFinish();
    } };
    o === "delete" ? Ne.delete(P2, { ...h, data: A.current(u2) }) : Ne[o](P2, A.current(u2), h);
  }, [u2, e]), j = (0, import_react7.useCallback)((o, P2) => {
    f2(typeof o == "string" ? (t) => ({ ...t, [o]: P2 }) : typeof o == "function" ? (t) => o(t) : o);
  }, [f2]), U = (0, import_react7.useCallback)((o, P2) => {
    F2(typeof o > "u" ? () => u2 : (t) => ({ ...t, ...typeof o == "string" ? { [o]: P2 } : o }));
  }, [u2, F2]), E2 = (0, import_react7.useCallback)((...o) => {
    o.length === 0 ? f2(n) : f2((P2) => Object.keys(n).filter((t) => o.includes(t)).reduce((t, h) => (t[h] = n[h], t), { ...P2 }));
  }, [f2, n]), Y2 = (0, import_react7.useCallback)((o, P2) => {
    e((t) => {
      let h = { ...t, ...typeof o == "string" ? { [o]: P2 } : o };
      return r(Object.keys(h).length > 0), h;
    });
  }, [e, r]), Z2 = (0, import_react7.useCallback)((...o) => {
    e((P2) => {
      let t = Object.keys(P2).reduce((h, m) => ({ ...h, ...o.length > 0 && !o.includes(m) ? { [m]: P2[m] } : {} }), {});
      return r(Object.keys(t).length > 0), t;
    });
  }, [e, r]), D2 = (o) => (P2, t) => {
    v(o, P2, t);
  }, ee2 = (0, import_react7.useCallback)(D2("get"), [v]), te2 = (0, import_react7.useCallback)(D2("post"), [v]), re2 = (0, import_react7.useCallback)(D2("put"), [v]), oe2 = (0, import_react7.useCallback)(D2("patch"), [v]), ne = (0, import_react7.useCallback)(D2("delete"), [v]), ae2 = (0, import_react7.useCallback)(() => {
    d.current && d.current.cancel();
  }, []), se2 = (0, import_react7.useCallback)((o) => {
    A.current = o;
  }, []);
  return { data: u2, setData: j, isDirty: !(0, import_lodash.default)(u2, n), errors: c, hasErrors: s, processing: g, progress: O2, wasSuccessful: L, recentlySuccessful: B2, transform: se2, setDefaults: U, reset: E2, setError: Y2, clearErrors: Z2, submit: v, get: ee2, post: te2, put: re2, patch: oe2, delete: ne, cancel: ae2 };
}
function X2() {
  let l = (0, import_react9.useContext)(H2);
  if (!l)
    throw new Error("usePage must be used within the Inertia component");
  return l;
}
var At = Ne;
export {
  Se as Head,
  xe as Link,
  W2 as createInertiaApp,
  At as router,
  G as useForm,
  X2 as usePage,
  w as useRemember
};
/*! Bundled license information:

nprogress/nprogress.js:
  (* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
   * @license MIT *)
*/
//# sourceMappingURL=@inertiajs_react.js.map
